macro(reason_set_or KEY VALUE DEFAULT)
  if(VALUE)
    set("${KEY}" "${VALUE}")
  else()
    set("${KEY}" "${DEFAULT}")
  endif()
endmacro()

macro(reason_set_if KEY VALUE)
  if(NOT "${VALUE}" STREQUAL "")
    set("${KEY}" "${VALUE}")
  endif()
endmacro()

macro(reason_set_check KEY ERRMSG)
  if(NOT ${KEY})
    reason_message(FATAL_ERROR "${ERRMSG}")
  endif()
endmacro()

function(reason_message)
  reason_define_colors()
  list(GET ARGV 0 MessageType)
  if(MessageType STREQUAL FATAL_ERROR OR MessageType STREQUAL SEND_ERROR)
    list(REMOVE_AT ARGV 0)
    message("${MessageType}" "${c_bred}${ARGV}${c_reset}")
  elseif(MessageType STREQUAL WARNING)
    list(REMOVE_AT ARGV 0)
    message("${MessageType}" "${c_byellow}${ARGV}${c_reset}")
  elseif(MessageType STREQUAL AUTHOR_WARNING)
    list(REMOVE_AT ARGV 0)
    message("${MessageType}" "${c_baqua}${ARGV}${c_reset}")
  elseif(MessageType STREQUAL STATUS)
    list(REMOVE_AT ARGV 0)
    message("${MessageType}" "${c_green}${ARGV}${c_reset}")
  elseif(MessageType STREQUAL VERBOSE)
    list(REMOVE_AT ARGV 0)
    message("${c_bfuchsia}${ARGV}${c_reset}")
  else()
    message("${c_silver}${ARGV}${c_reset}")
  endif()
endfunction()

function(reason_verbose)
  if(REASON_VERBOSE)
    if(REASON_BRIEF_PATH)
      string(REPLACE "${CMAKE_SOURCE_DIR}" "~" ARGV "${ARGV}")
    endif()
    reason_message(VERBOSE "${ARGV}")
  endif()
endfunction()

function(reason_print_help)
  reason_message(AUTHOR_WARNING "${ARGV}")
  reason_message(FATAL_ERROR)
endfunction()

function(reason_util_configure_and_include IN_FILE OUT_FILE)
  set(OUT_FILE_FULL "${CMAKE_BINARY_DIR}/reason.cmake/${OUT_FILE}")
  if(EXISTS OUT_FILE_FULL)
    include("${OUT_FILE_FULL}")
  else()
    configure_file("${REASON_MODULE_DIR}/${IN_FILE}" "${OUT_FILE_FULL}" @ONLY)
    include("${OUT_FILE_FULL}")
  endif()
endfunction()

function(reason_extract_dep_inc_dirs_to_target TARGET_NAME DEP)
  function(reason_extract_dep_inc_dirs_to_target_one TARGET_NAME DEP PROP_NAME)
    get_target_property(props "${DEP}" "${PROP_NAME}")
    if("${props}" STREQUAL "props-NOTFOUND")
      return()
    endif()
    foreach(prop IN LISTS props)
      target_include_directories("${TARGET_NAME}" PRIVATE "${prop}")
      reason_verbose("    [private-include=${v}]")
    endforeach()
  endfunction()

  get_target_property(TARGET_TYPE "${TARGET_NAME}" "TYPE")
  reason_verbose("${TARGET_NAME} properties: [type=${TARGET_TYPE}]")

  reason_verbose("  add dep interface include directories: [dep=${DEP}]")
  reason_extract_dep_inc_dirs_to_target_one("${TARGET_NAME}" "${DEP}" "INTERFACE_INCLUDE_DIRECTORIES")

  if(NOT "${TARGET_TYPE}" STREQUAL "INTERFACE_LIBRARY")
    reason_verbose("  add dep include directories: [dep=${DEP}]")
    reason_extract_dep_inc_dirs_to_target_one("${TARGET_NAME}" "${DEP}" "INCLUDE_DIRECTORIES")
  endif()
endfunction()

function(reason_unique_target_properties TARGET_NAME)
  function(reason_unique_target_properties_one TARGET_NAME PROP_NAME)
    get_target_property(props "${TARGET_NAME}" "${PROP_NAME}")
    if("${props}" STREQUAL "props-NOTFOUND")
      return()
    endif()
    list(REMOVE_DUPLICATES props)
    set_target_properties("${TARGET_NAME}" PROPERTIES "${PROP_NAME}" "${props}")
  endfunction()

  get_target_property(TARGET_TYPE "${TARGET_NAME}" "TYPE")
  reason_verbose("${TARGET_NAME} properties: [type=${TARGET_TYPE}]")

  reason_unique_target_properties_one("${TARGET_NAME}" "INTERFACE_COMPILE_OPTIONS")
  reason_unique_target_properties_one("${TARGET_NAME}" "INTERFACE_INCLUDE_DIRECTORIES")
  reason_unique_target_properties_one("${TARGET_NAME}" "INTERFACE_LINK_LIBRARIES")

  if(NOT "${TARGET_TYPE}" STREQUAL "INTERFACE_LIBRARY")
    reason_unique_target_properties_one("${TARGET_NAME}" "COMPILE_OPTIONS")
    reason_unique_target_properties_one("${TARGET_NAME}" "INCLUDE_DIRECTORIES")
    reason_unique_target_properties_one("${TARGET_NAME}" "LINK_LIBRARIES")
  endif()
endfunction()

function(reason_print_target_properties TARGET_NAME)
  if(NOT REASON_VERBOSE)
    return()
  endif()

  function(reason_print_target_properties_one TARGET_NAME PROP_NAME)
    get_target_property(props "${TARGET_NAME}" "${PROP_NAME}")
    if("${props}" STREQUAL "props-NOTFOUND")
      reason_verbose("  ${PROP_NAME}: None")
    else()
      reason_verbose("  ${PROP_NAME}:")
      foreach(prop IN LISTS props)
        reason_verbose("    ${prop}")
      endforeach()
    endif()
  endfunction()

  get_target_property(TARGET_TYPE "${TARGET_NAME}" "TYPE")
  reason_verbose("${TARGET_NAME} properties: [type=${TARGET_TYPE}]")

  reason_print_target_properties_one("${TARGET_NAME}" "INTERFACE_COMPILE_OPTIONS")
  reason_print_target_properties_one("${TARGET_NAME}" "INTERFACE_INCLUDE_DIRECTORIES")
  reason_print_target_properties_one("${TARGET_NAME}" "INTERFACE_LINK_LIBRARIES")

  if(NOT "${TARGET_TYPE}" STREQUAL "INTERFACE_LIBRARY")
    reason_print_target_properties_one("${TARGET_NAME}" "COMPILE_OPTIONS")
    reason_print_target_properties_one("${TARGET_NAME}" "INCLUDE_DIRECTORIES")
    reason_print_target_properties_one("${TARGET_NAME}" "LINK_LIBRARIES")
  endif()
endfunction()
